name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - '*'
    paths: [ 'cmd/**', 'pkg/**', 'builds/**', '.github/workflows/build.yaml' ]
    tags:
      - '*.*.*'

jobs:
  build-binaries:
    name: Build binaries
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: true
      matrix:
        arch: [amd64, arm64]

    steps:  
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Go Environment 🐹
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
          cache: true
      
      - name: Install ARM64 cross compiler 🛠️
        if: matrix.arch == 'arm64'
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build ${{ matrix.arch }} executables ⚙️
        run: |
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            export CC=aarch64-linux-gnu-gcc
          else
            export CC=gcc
          fi
          CGO_ENABLED=1 GOOS=linux GOARCH=${{ matrix.arch }} CC=$CC go build -a -installsuffix cgo -o binvault-server-${{ matrix.arch }} ./pkg/main.go
          CGO_ENABLED=1 GOOS=linux GOARCH=${{ matrix.arch }} CC=$CC go build -a -installsuffix cgo -o binvault-${{ matrix.arch }} ./cmd/main.go
      
      - name: Upload CLI binary 📤
        uses: actions/upload-artifact@v4
        with:
          name: binvault-${{ matrix.arch }}
          path: binvault-${{ matrix.arch }}
          overwrite: true

      - name: Upload Server binary 📤
        uses: actions/upload-artifact@v4
        with:
          name: binvault-server-${{ matrix.arch }}
          path: binvault-server-${{ matrix.arch }}
          overwrite: true
      
      - name: Release 🚀
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: |
            binvault-${{ matrix.arch }}
            binvault-server-${{ matrix.arch }}

  build-docker:
    name: Build Docker images
    needs: build-binaries
    runs-on: ubuntu-24.04

    permissions:
        contents: read
        packages: write
        id-token: write

    strategy:
      fail-fast: true
      matrix:
        variant: [ base, quickstart ] 
    
    steps:
      
      - name: Checkout 🛎️
        uses: actions/checkout@v4
      
      - name: Set up QEMU 🐧
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx 🐋
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub 🔑
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Download all binaries 📥
        uses: actions/download-artifact@v4
        with:
          path: docker/${{ matrix.variant }}
          merge-multiple: true

      - name: Extract Docker metadata 🧠
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/kalevski/binvault
          flavor: |
            latest=auto
          tags: |
            type=raw,value=${{ matrix.variant }}
            type=raw,enable={{is_tag}},value=${{ matrix.variant }}-${{ version }}
            type=raw,enable={{ matrix.variant == 'base' }},value=latest
            type=raw,enable={{ is_tag && matrix.variant == 'base' }},value=${{ version }}

      - name: Build and push 📦
        uses: docker/build-push-action@v6
        with:
          context: ./docker/${{ matrix.variant }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
